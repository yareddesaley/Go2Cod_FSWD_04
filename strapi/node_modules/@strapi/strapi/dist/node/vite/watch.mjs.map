{"version":3,"file":"watch.mjs","sources":["../../../src/node/vite/watch.ts"],"sourcesContent":["import path from 'node:path';\nimport http from 'node:http';\nimport fs from 'node:fs/promises';\nimport type { Core } from '@strapi/types';\n\nimport { mergeConfigWithUserConfig, resolveDevelopmentConfig } from './config';\n\nimport type { BuildContext } from '../create-build-context';\n\ninterface ViteWatcher {\n  close(): Promise<void>;\n}\n\nconst HMR_DEFAULT_PORT = 5173;\n\nconst createHMRServer = () => {\n  return http.createServer(\n    // http server request handler. keeps the same with\n    // https://github.com/websockets/ws/blob/45e17acea791d865df6b255a55182e9c42e5877a/lib/websocket-server.js#L88-L96\n    (_, res) => {\n      const body = http.STATUS_CODES[426]; // Upgrade Required\n\n      res.writeHead(426, {\n        'Content-Length': body?.length ?? 0,\n        'Content-Type': 'text/plain',\n      });\n\n      res.end(body);\n    }\n  );\n};\n\nconst watch = async (ctx: BuildContext): Promise<ViteWatcher> => {\n  const hmrServer = createHMRServer();\n\n  ctx.options.hmrServer = hmrServer;\n  ctx.options.hmrClientPort = HMR_DEFAULT_PORT;\n\n  const config = await resolveDevelopmentConfig(ctx);\n  const finalConfig = await mergeConfigWithUserConfig(config, ctx);\n\n  const hmrConfig = config.server?.hmr;\n\n  // If the server used for Vite hmr is the one we've created (<> no user override)\n  if (typeof hmrConfig === 'object' && hmrConfig.server === hmrServer) {\n    // Only restart the hmr server when Strapi's server is listening\n    strapi.server.httpServer.on('listening', async () => {\n      hmrServer.listen(hmrConfig.clientPort ?? hmrConfig.port ?? HMR_DEFAULT_PORT);\n    });\n  }\n\n  ctx.logger.debug('Vite config', finalConfig);\n\n  const { createServer } = await import('vite');\n\n  const vite = await createServer(finalConfig);\n\n  ctx.strapi.server.app.use((ctx, next) => {\n    return new Promise((resolve, reject) => {\n      vite.middlewares(ctx.req, ctx.res, (err: unknown) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(next());\n        }\n      });\n    });\n  });\n\n  const serveAdmin: Core.MiddlewareHandler = async (koaCtx, next) => {\n    await next();\n\n    if (koaCtx.method !== 'HEAD' && koaCtx.method !== 'GET') {\n      return;\n    }\n\n    if (koaCtx.body != null || koaCtx.status !== 404) {\n      return;\n    }\n\n    const url = koaCtx.originalUrl;\n\n    let template = await fs.readFile(path.relative(ctx.cwd, '.strapi/client/index.html'), 'utf-8');\n    template = await vite.transformIndexHtml(url, template);\n\n    koaCtx.type = 'html';\n    koaCtx.body = template;\n  };\n\n  ctx.strapi.server.routes([\n    {\n      method: 'GET',\n      path: `${ctx.basePath}:path*`,\n      handler: serveAdmin,\n      config: { auth: false },\n    },\n  ]);\n\n  return {\n    async close() {\n      await vite.close();\n\n      if (hmrServer.listening) {\n        // Manually close the hmr server\n        // /!\\ This operation MUST be done after calling .close() on the vite\n        //      instance to avoid flaky behaviors with attached clients\n        await new Promise<void>((resolve, reject) => {\n          hmrServer.close((err) => (err ? reject(err) : resolve()));\n        });\n      }\n    },\n  };\n};\n\nexport { watch };\nexport type { ViteWatcher };\n"],"names":["ctx"],"mappings":";;;;AAaA,MAAM,mBAAmB;AAEzB,MAAM,kBAAkB,MAAM;AAC5B,SAAO,KAAK;AAAA;AAAA;AAAA,IAGV,CAAC,GAAG,QAAQ;AACJ,YAAA,OAAO,KAAK,aAAa,GAAG;AAElC,UAAI,UAAU,KAAK;AAAA,QACjB,kBAAkB,MAAM,UAAU;AAAA,QAClC,gBAAgB;AAAA,MAAA,CACjB;AAED,UAAI,IAAI,IAAI;AAAA,IACd;AAAA,EAAA;AAEJ;AAEM,MAAA,QAAQ,OAAO,QAA4C;AAC/D,QAAM,YAAY;AAElB,MAAI,QAAQ,YAAY;AACxB,MAAI,QAAQ,gBAAgB;AAEtB,QAAA,SAAS,MAAM,yBAAyB,GAAG;AACjD,QAAM,cAAc,MAAM,0BAA0B,QAAQ,GAAG;AAEzD,QAAA,YAAY,OAAO,QAAQ;AAGjC,MAAI,OAAO,cAAc,YAAY,UAAU,WAAW,WAAW;AAEnE,WAAO,OAAO,WAAW,GAAG,aAAa,YAAY;AACnD,gBAAU,OAAO,UAAU,cAAc,UAAU,QAAQ,gBAAgB;AAAA,IAAA,CAC5E;AAAA,EACH;AAEI,MAAA,OAAO,MAAM,eAAe,WAAW;AAE3C,QAAM,EAAE,aAAA,IAAiB,MAAM,OAAO,MAAM;AAEtC,QAAA,OAAO,MAAM,aAAa,WAAW;AAE3C,MAAI,OAAO,OAAO,IAAI,IAAI,CAACA,MAAK,SAAS;AACvC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAK,YAAYA,KAAI,KAAKA,KAAI,KAAK,CAAC,QAAiB;AACnD,YAAI,KAAK;AACP,iBAAO,GAAG;AAAA,QAAA,OACL;AACL,kBAAQ,MAAM;AAAA,QAChB;AAAA,MAAA,CACD;AAAA,IAAA,CACF;AAAA,EAAA,CACF;AAEK,QAAA,aAAqC,OAAO,QAAQ,SAAS;AACjE,UAAM,KAAK;AAEX,QAAI,OAAO,WAAW,UAAU,OAAO,WAAW,OAAO;AACvD;AAAA,IACF;AAEA,QAAI,OAAO,QAAQ,QAAQ,OAAO,WAAW,KAAK;AAChD;AAAA,IACF;AAEA,UAAM,MAAM,OAAO;AAEf,QAAA,WAAW,MAAM,GAAG,SAAS,KAAK,SAAS,IAAI,KAAK,2BAA2B,GAAG,OAAO;AAC7F,eAAW,MAAM,KAAK,mBAAmB,KAAK,QAAQ;AAEtD,WAAO,OAAO;AACd,WAAO,OAAO;AAAA,EAAA;AAGZ,MAAA,OAAO,OAAO,OAAO;AAAA,IACvB;AAAA,MACE,QAAQ;AAAA,MACR,MAAM,GAAG,IAAI,QAAQ;AAAA,MACrB,SAAS;AAAA,MACT,QAAQ,EAAE,MAAM,MAAM;AAAA,IACxB;AAAA,EAAA,CACD;AAEM,SAAA;AAAA,IACL,MAAM,QAAQ;AACZ,YAAM,KAAK;AAEX,UAAI,UAAU,WAAW;AAIvB,cAAM,IAAI,QAAc,CAAC,SAAS,WAAW;AACjC,oBAAA,MAAM,CAAC,QAAS,MAAM,OAAO,GAAG,IAAI,SAAU;AAAA,QAAA,CACzD;AAAA,MACH;AAAA,IACF;AAAA,EAAA;AAEJ;"}