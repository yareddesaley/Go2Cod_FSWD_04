{"version":3,"file":"single-type.mjs","sources":["../../../src/core-api/service/single-type.ts"],"sourcesContent":["import type { Struct, Core } from '@strapi/types';\nimport { CoreService } from './core-service';\n\nexport class SingleTypeService extends CoreService implements Core.CoreAPI.Service.SingleType {\n  private contentType: Struct.SingleTypeSchema;\n\n  constructor(contentType: Struct.SingleTypeSchema) {\n    super();\n\n    this.contentType = contentType;\n  }\n\n  async getDocumentId() {\n    const { uid } = this.contentType;\n\n    return strapi.db\n      .query(uid)\n      .findOne()\n      .then((document) => document?.documentId as string);\n  }\n\n  async find(params = {}) {\n    const { uid } = this.contentType;\n\n    return strapi.documents(uid).findFirst(this.getFetchParams(params));\n  }\n\n  async createOrUpdate(params = {}) {\n    const { uid } = this.contentType;\n\n    const documentId = await this.getDocumentId();\n\n    if (documentId) {\n      return strapi.documents(uid).update({\n        ...this.getFetchParams(params),\n        documentId,\n      });\n    }\n\n    return strapi.documents(uid).create(this.getFetchParams(params));\n  }\n\n  async delete(params = {}) {\n    const { uid } = this.contentType;\n\n    const documentId = await this.getDocumentId();\n    if (!documentId) return { deletedEntries: 0 };\n\n    const { entries } = await strapi.documents(uid).delete({\n      ...this.getFetchParams(params),\n      documentId,\n    });\n\n    return { deletedEntries: entries.length };\n  }\n}\n\nconst createSingleTypeService = (\n  contentType: Struct.SingleTypeSchema\n): Core.CoreAPI.Service.SingleType => {\n  return new SingleTypeService(contentType);\n};\n\nexport { createSingleTypeService };\n"],"names":[],"mappings":";AAGO,MAAM,0BAA0B,YAAuD;AAAA,EACpF;AAAA,EAER,YAAY,aAAsC;AAC1C;AAEN,SAAK,cAAc;AAAA,EACrB;AAAA,EAEA,MAAM,gBAAgB;AACd,UAAA,EAAE,IAAI,IAAI,KAAK;AAEd,WAAA,OAAO,GACX,MAAM,GAAG,EACT,UACA,KAAK,CAAC,aAAa,UAAU,UAAoB;AAAA,EACtD;AAAA,EAEA,MAAM,KAAK,SAAS,IAAI;AAChB,UAAA,EAAE,IAAI,IAAI,KAAK;AAEd,WAAA,OAAO,UAAU,GAAG,EAAE,UAAU,KAAK,eAAe,MAAM,CAAC;AAAA,EACpE;AAAA,EAEA,MAAM,eAAe,SAAS,IAAI;AAC1B,UAAA,EAAE,IAAI,IAAI,KAAK;AAEf,UAAA,aAAa,MAAM,KAAK;AAE9B,QAAI,YAAY;AACd,aAAO,OAAO,UAAU,GAAG,EAAE,OAAO;AAAA,QAClC,GAAG,KAAK,eAAe,MAAM;AAAA,QAC7B;AAAA,MAAA,CACD;AAAA,IACH;AAEO,WAAA,OAAO,UAAU,GAAG,EAAE,OAAO,KAAK,eAAe,MAAM,CAAC;AAAA,EACjE;AAAA,EAEA,MAAM,OAAO,SAAS,IAAI;AAClB,UAAA,EAAE,IAAI,IAAI,KAAK;AAEf,UAAA,aAAa,MAAM,KAAK;AAC9B,QAAI,CAAC;AAAmB,aAAA,EAAE,gBAAgB;AAEpC,UAAA,EAAE,YAAY,MAAM,OAAO,UAAU,GAAG,EAAE,OAAO;AAAA,MACrD,GAAG,KAAK,eAAe,MAAM;AAAA,MAC7B;AAAA,IAAA,CACD;AAEM,WAAA,EAAE,gBAAgB,QAAQ;EACnC;AACF;AAEM,MAAA,0BAA0B,CAC9B,gBACoC;AAC7B,SAAA,IAAI,kBAAkB,WAAW;AAC1C;"}