{"version":3,"file":"entries.js","sources":["../../../src/services/document-service/entries.ts"],"sourcesContent":["import type { UID, Modules } from '@strapi/types';\nimport { async } from '@strapi/utils';\nimport { assoc, omit } from 'lodash/fp';\n\nimport * as components from './components';\n\nimport { transformParamsDocumentId } from './transform/id-transform';\nimport { transformParamsToQuery } from './transform/query';\nimport { pickSelectionParams } from './params';\nimport { applyTransforms } from './attributes';\nimport { transformData } from './transform/data';\n\nconst createEntriesService = (\n  uid: UID.ContentType,\n  entityValidator: Modules.EntityValidator.EntityValidator\n) => {\n  const contentType = strapi.contentType(uid);\n\n  async function createEntry(params = {} as any) {\n    const { data, ...restParams } = await transformParamsDocumentId(uid, params);\n\n    const query = transformParamsToQuery(uid, pickSelectionParams(restParams) as any); // select / populate\n\n    // Validation\n    if (!data) {\n      throw new Error('Create requires data attribute');\n    }\n\n    const validData = await entityValidator.validateEntityCreation(contentType, data, {\n      // Note: publishedAt value will always be set when DP is disabled\n      isDraft: !params?.data?.publishedAt,\n      locale: params?.locale,\n    });\n\n    // Component handling\n    const componentData = await components.createComponents(uid, validData);\n    const dataWithComponents = components.assignComponentData(\n      contentType,\n      componentData,\n      validData\n    );\n\n    const entryData = applyTransforms(contentType, dataWithComponents);\n\n    const doc = await strapi.db.query(uid).create({ ...query, data: entryData });\n\n    return doc;\n  }\n\n  async function deleteEntry(id: number) {\n    const componentsToDelete = await components.getComponents(uid, { id });\n\n    const deletedEntry = await strapi.db.query(uid).delete({ where: { id } });\n\n    await components.deleteComponents(uid, componentsToDelete as any, { loadComponents: false });\n\n    return deletedEntry;\n  }\n\n  async function updateEntry(entryToUpdate: any, params = {} as any) {\n    const { data, ...restParams } = await transformParamsDocumentId(uid, params);\n    const query = transformParamsToQuery(uid, pickSelectionParams(restParams) as any); // select / populate\n\n    const validData = await entityValidator.validateEntityUpdate(\n      contentType,\n      data,\n      {\n        isDraft: !params?.data?.publishedAt, // Always update the draft version\n        locale: params?.locale,\n      },\n      entryToUpdate\n    );\n    // Component handling\n    const componentData = await components.updateComponents(uid, entryToUpdate, validData as any);\n    const dataWithComponents = components.assignComponentData(\n      contentType,\n      componentData,\n      validData\n    );\n\n    const entryData = applyTransforms(contentType, dataWithComponents);\n\n    return strapi.db\n      .query(uid)\n      .update({ ...query, where: { id: entryToUpdate.id }, data: entryData });\n  }\n\n  async function publishEntry(entry: any, params = {} as any) {\n    return async.pipe(\n      omit('id'),\n      assoc('publishedAt', new Date()),\n      (draft) => {\n        const opts = { uid, locale: draft.locale, status: 'published', allowMissingId: true };\n        return transformData(draft, opts);\n      },\n      // Create the published entry\n      (draft) => createEntry({ ...params, data: draft, locale: draft.locale, status: 'published' })\n    )(entry);\n  }\n\n  async function discardDraftEntry(entry: any, params = {} as any) {\n    return async.pipe(\n      omit('id'),\n      assoc('publishedAt', null),\n      (entry) => {\n        const opts = { uid, locale: entry.locale, status: 'draft', allowMissingId: true };\n        return transformData(entry, opts);\n      },\n      // Create the draft entry\n      (data) => createEntry({ ...params, locale: data.locale, data, status: 'draft' })\n    )(entry);\n  }\n\n  return {\n    create: createEntry,\n    delete: deleteEntry,\n    update: updateEntry,\n    publish: publishEntry,\n    discardDraft: discardDraftEntry,\n  };\n};\n\nexport { createEntriesService };\n"],"names":["params","data","transformParamsDocumentId","query","transformParamsToQuery","pickSelectionParams","components.createComponents","components.assignComponentData","applyTransforms","components.getComponents","components.deleteComponents","components.updateComponents","async","omit","assoc","transformData","entry"],"mappings":"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"}